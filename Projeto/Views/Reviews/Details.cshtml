@model Projeto.Models.Reviews
@{
    ViewData["Title"] = "Details";
}

<head>
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
</head>
<style>
    h1 {
        font-family: 'Brush Script MT', cursive;
        font-size: 50px;
        color: #8EAADB;
    }

    .primaryBtn {
        padding: 10px;
        text-align: center;
        margin: 4px 2px;
        border-radius: 8px;
        color: #ffffff;
        background-color: #b4c7e7;
        border-color: #b4c7e7;
    }

    img {
        max-width: 150px;
        max-height: 200px;
    }

    .review-container {
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        background-color: white;
        display: flex;
        justify-content: space-between;
    }

    .details-section {
        /* width: 75%; /* Aumentado de 70% para 75% */ */ align-items:center;
        padding-right: 20px; /* Aumentado de 10px para 20px */
    }

    .description-box {
        max-height: 300px; 
        overflow-y: auto; 
        word-wrap: break-word;
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 10px;
        width: 100%;
    }

    .comments-section {
        /* width: 25%;  */
        border-left: 1px solid #ccc;
        /* padding-left: 20px; */
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        height: 70vh;
        overflow-y: auto;
    }

        .comments-section h3 {
            margin-bottom: 20px;
        }

    .comment {
        padding: 10px;
        border-bottom: 1px solid #ccc;
    }

    .comment-input {
        margin-top: 20px;
    }
    /* Estilos para o modal */
    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
    }

    .modal-content {
        display: flex;
        background: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        width: 60%;
        max-height: 90vh;
        overflow-y: auto;
        align-items: center;
    }

    #modal-row {
        width: 100%;
    }

    

    #commentInput {
        resize: none; /* Impede o usuário de redimensionar manualmente */
        overflow-y: hidden; /* Esconde a barra de rolagem vertical */
   
</style>

<div class="modal-overlay">
    <div class="modal-content review-container">
        <div id="modal-row" class="row">
            <div class="col-md-8">
                <div class="details-section">
                    <center><h1>@Model.Title</h1>
                    @if (Model.Image != null)
                    {
                        <img src="~/Imagens/@Model.Image" alt="@Model.Title" title="@Model.Title">
                    }
                    <h4 style="margin-top:10px; margin-bottom:5px;">
                        Avaliação</h4>
                        <div>
                            @for (int i = 0; i < Model.Rating; i++)
                            {
                                <i class="fa fa-star" aria-hidden="true" style="color: gold;"></i>
                            }
                            @if (Model.Rating < 5)
                            {
                                @for (int i = Model.Rating; i < 5; i++)
                                {
                                    <i class="fa fa-star" aria-hidden="true" style="color: lightgrey;"></i>
                                }
                            }
                        </div>
                            <h4>Categoria: <small>@Model.Category.Name</small></h4>
                    </center>
                        <h4>
                            Descrição
                        </h4>
                        <div class="description-box">
                            <span style="word-wrap: break-word;">@Model.Description</span>
                        </div>
                        <div class="mt-3">
                            @if (@ViewBag.Source == "homePage")
                            {
                                <a href="@Url.Action("Index", "Home")" class="btn primaryBtn">Fechar</a>
                            }
                            else
                            {
                                <a href="@Url.Action("Index", "Reviews")" class="btn primaryBtn">Fechar</a>
                            }
                        </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="comments-section">
                    <div style="display: flex; justify-content: center; align-items: center;">
                        <h3 style="">Comentários</h3>
                    </div>
                    <div id="commentsDiv">
                        @foreach (var c in (List<Comments>)ViewData["CommentsList"] ?? Enumerable.Empty<Comments>())
                        {
                            <div class="comment">
                                <strong>@c.Utilizador.UserName:</strong> @c.Comment
                            </div> 
                            
                        } 


                    </div>
                </div>
                
                @using (Html.BeginForm("Create", "Comments", FormMethod.Post))
               {
                @Html.AntiForgeryToken()
                    <div class="comment-input">
                        <div class="input-group mb-3">
                            @if (!User.Identity.IsAuthenticated)
                            {
                                <textarea id="commentInput" class="form-control" rows="1" placeholder="Comentário" disabled></textarea>
                            }
                            else
                            {
                                <textarea id="commentInput" class="form-control" rows="1" placeholder="Comentário"></textarea>
                            }
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary" type="button" id="sendCommentButton"><i class="fa fa-paper-plane" aria-hidden="true"></i></button>
                        </div>
                    </div>
                                                
                </div>
               }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
        $(document).ready(function () {
            // função para ajustar dinamicamente a altura da textarea
            function autoExpandTextarea() {
                var textarea = this;
                $(textarea).css('height', 'auto').css('height', textarea.scrollHeight + 'px');
            }

            // ajustar altura inicial
            $('#commentInput')
                .on('input', autoExpandTextarea) // ajusta dinamicamente a altura
                .trigger('input'); // garante que a textarea está bem ajustada no inicio

            $('#sendCommentButton').click(function () {
                var comment = $('#commentInput').val(); // valor da textarea
                var revId = '@Model.ReviewId'; // valor do revId

                $.ajax({
                    url: '@Url.Action("Create", "Comments")', // URL do método do controlador
                    type: 'POST',
                    data: {
                        c: comment, // envia o valor da textarea por parâmetro
                        revId: revId // envia o id da review
                    },
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val() // Adiciona o CSRF token
                    },
                    success: function (response) {
                        if (response.success) {
                            // adiciona o novo comentário ao div, também com a informação do username
                            var newComment = $('<div class="comment">')
                                .append($('<strong>').text(response.userName + ": "))
                                .append($('<span>').text(comment));
                            $('#commentsDiv').append(newComment);

                            // limpar o campo do comentário 
                            $('#commentInput').val('');
                            // ajustar a altura da textarea 
                            $('#commentInput').trigger('input');
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        alert('Ocorreu um erro ao enviar o comentário: ' + error);
                    }
                });
            });
        });
    </script>
}
