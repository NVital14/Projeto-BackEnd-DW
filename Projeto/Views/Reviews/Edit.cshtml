@model Projeto.Models.Reviews

@{
    ViewData["Title"] = "Edit";
    // Defina valor default para o Rating
    var initialRating = Model.Rating;
    var imageUrl = "";
    if (Model.Image != null)
    {
        imageUrl = Url.Content($"~/imagens/{Model.Image}");
    }
}
<head>
    <link rel="stylesheet" href=https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <!-- bootstrap-select CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.18/css/bootstrap-select.min.css">

</head>
<style>

    h1 {
        font-family: Brush Script MT;
        font-size: 50px;
        color: #8EAADB;
    }

    .primaryBtn {
        padding: 10px;
        text-align: center;
        margin: 4px 2px;
        border-radius: 8px;
        color: #ffffff;
        background-color: #b4c7e7;
        border-color: #b4c7e7;
    }

</style>
<h1 style="margin-top:30px;">Editar</h1>

<h4>Review</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <!-- Define o div com id 'app' para a instância Vue -->
        <div id="app">
            <form asp-action="Edit" method="post" enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="ReviewId" />
                <div class="form-group">
                    <label asp-for="Title" class="control-label"></label>
                    <input asp-for="Title" class="form-control" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Image" class="control-label"></label>
                    <input type="file" name="ImageReview" accept=".png,.jpg,.jpeg" class="form-control" id="imageInput" />
                    <span asp-validation-for="Image" class="text-danger"></span>
                </div>
                <br />
                <div class="form-group">
                    <img id="previewImage" src="@imageUrl" style="display:block; max-width: 50%; height: auto;" />
                </div>
                <div class="form-group">
                    <label asp-for="Rating" class="control-label"></label>
                    <rating-component v-model="rating" :initial-value="rating"></rating-component>
                    <input type="hidden" name="Rating" :value="rating" />
                    <span asp-validation-for="Rating" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <div class="form-group">
                        <label asp-for="CategoryFK" class="control-label"></label>
                        <select asp-for="CategoryFK" class="form-control" asp-items="ViewBag.CategoryFK">
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <label asp-for="Description" class="control-label"></label>
                    <textarea asp-for="Description" class="form-control" rows="8"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <div class="form-check">
                    <input asp-for="IsShared" class="form-check-input" type="checkbox" id="isSharedCheckbox">
                    <label class="form-check-label" for="isSharedCheckbox">
                        Partilhar Review
                    </label>
                    </div>
                <div class="form-check">
  
                    <span>Deseja editar os colaboradores desta review?</span>
                    <select class="selectpicker" multiple data-live-search="true" name="userIdsList">
                           @{

                            var usersList = ViewData["UsersList"] as List<Utilizadores> ?? new List<Utilizadores>();
                            var selectedUserIds = ViewData["SelectedUserIds"] as List<int> ?? new List<int>();
                            @foreach (var u in usersList)
                            {
                                
                                if (selectedUserIds.Contains(u.Id))
                                {
                                <option value="@u.Id" selected>
                                    @u.UserName
                                 </option>

                                }
                                else
                                {
                                    <option value="@u.Id" >
                                        @u.UserName
                                    </option>
                                }

                            
                        }}
                        
                        
                    </select>
                </div>
                    <div class="form-group">
                        <input type="submit" value="Guardar" class="primaryBtn" />
                    </div>
            </form>
        </div>
    </div>
</div>

<div>
    <button class="btn btn-outline-secondary" onclick="window.location.href='@Url.Action("Index")'"><i class="fa fa-arrow-left"></i> Voltar à lista</button>

</div>

@section Scripts {
    @* inclui as bibliotecas necessárias para usar Vue e Bootstrap-Vue *@
    <script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap-vue@2/dist/bootstrap-vue.js"></script>
    <!-- jQuery -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <!-- Popper.js -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.1/umd/popper.min.js"></script>
    <!-- Bootstrap JS -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <!-- bootstrap-select JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.18/js/bootstrap-select.min.js"></script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>

        // Define o componente Vue 'rating-component'
        Vue.component('rating-component', {
            template: `
                                        <div>
                                            <b-form-rating v-model="value" variant="warning"></b-form-rating>
                                        </div>
                                    `,
            props: ['initialValue'],// Define a prop 'initialValue'
            data() {
                return {
                    value: this.initialValue // Inicializa o 'value' com 'initialValue'
                }
            },
            watch: {
                // Conforme as mudanças no 'value' e faz o evento 'input'
                value(newValue) {
                    this.$emit('input', newValue);
                }
            }
        });

        // Inicializa a instância Vue
        new Vue({
            el: '#app', // Liga a instância ao elemento com id 'app'
            data: {
                // Define o 'rating' usando o valor inicial do 'initialRating'
                rating: @Html.Raw(initialRating)
                                    }
        });

        // Preview da imagem
        document.getElementById('imageInput').addEventListener('change', function (event) {
            var input = event.target;
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    var img = document.getElementById('previewImage');
                    img.src = e.target.result;
                    img.style.display = 'block';
                }
                reader.readAsDataURL(input.files[0]);
            }
        });
    </script>
}

